# Unix
alias tlf="tail -f"
alias ln='ln -v'
alias mkdir='mkdir -p'
alias ...='../..'
alias l='ls'
alias ll='ls -al'
alias lh='ls -Alh'
alias -g G='| grep'
alias -g M='| less'
alias -g L='| wc -l'
alias -g ONE="| awk '{ print \$1}'"

alias image_info="sips -g pixelWidth -g pixelHeight"

# git
alias g="git"
alias gci="git pull --rebase && rake && git push"
alias grc="git rebase --continue"
alias gc="git checkout"

# Ruby
alias help-strftime='ruby ~/bin/help-strftime.rb'

# Bundler
alias b="bundle"
alias be="bundle exec"
alias bake="bundle exec rake"
alias s="bundle exec rspec"
alias cuc="bundle exec cucumber"

# Rubygems
alias gi="gem install"
alias giv="gem install -v"

# Rails
alias migrate="bundle exec rake db:migrate db:test:prepare"
alias remigrate="bundle exec rake db:migrate db:migrate:redo db:schema:dump db:test:prepare"
alias remongrate="bundle exec rake mongoid:migrate mongoid:migrate:redo"
alias migrate-all="bundle exec rake db:migrate && RAILS_ENV=test bundle exec rake db:migrate"
alias setup-test="RAILS_ENV=test bundle exec rake db:setup && RAILS_ENV=test bundle exec rake db:test:prepare"

# Heroku staging
alias staging='heroku run console --remote staging'
alias staging-process='watch heroku ps --remote staging'
alias staging-releases='heroku releases --remote staging'
alias staging-tail='heroku logs --tail --remote staging'
alias staging-deploy='git push staging staging:master && heroku maintenance:on --remote staging && heroku ps:scale web=0 worker=0 --remote staging && heroku run rake db:migrate --remote staging && heroku ps:scale web=1 worker=1 --remote staging && heroku maintenance:off --remote staging'


# Heroku testing
alias testing='heroku run console --remote testing'
alias testing-process='watch heroku ps --remote testing'
alias testing-releases='heroku releases --remote testing'
alias testing-tail='heroku logs --tail --remote testing'
alias testing-deploy='git push testing `git rev-parse --abbrev-ref HEAD`:master -f && heroku maintenance:on --remote testing && heroku ps:scale web=0 worker=0 --remote testing && heroku run rake db:migrate --remote testing && heroku ps:scale web=1 worker=1 --remote testing && heroku maintenance:off --remote testing'

# Heroku production
alias production='heroku run console --remote production'
alias production-process='watch heroku ps --remote production'
alias production-releases='heroku releases --remote production'
alias production-tail='heroku logs --tail --remote production'
alias production-deploy='git push production master && heroku maintenance:on --remote production && heroku ps:scale web=0 worker=0 --remote production && heroku run rake db:migrate --remote production && heroku ps:scale web=5 worker=1 --remote production && heroku maintenance:off --remote production'

# Heroku databases
#alias db-pull-staging='heroku db:pull --remote staging --confirm `basename $PWD`-staging'
#alias db-pull-production='heroku db:pull --remote production --confirm `basename $PWD`-production'
#alias db-copy-production-to-staging='heroku pgbackups:restore DATABASE `heroku pgbackups:url --remote production` --remote staging  --confirm `basename $PWD`-staging'
alias db-copy-production-to-staging='heroku ps:scale web=0 worker=0 --remote staging && heroku pgbackups:restore DATABASE `heroku pgbackups:url --remote production` --remote staging && heroku ps:scale web=1 worker=1 --remote staging'
alias db-backup-production='heroku pgbackups:capture --remote production'

alias db-pull-production='curl -o latest.dump `heroku pgbackups:url --remote production` && dropdb bookingexperts_development && createdb bookingexperts_development -O ruud && pg_restore --verbose --clean --no-acl --no-owner -h localhost -U ruud -d bookingexperts_development latest.dump'
alias db-pull-testing='curl -o latest.dump `heroku pgbackups:url --remote testing` && dropdb bookingexperts_development && createdb bookingexperts_development -O ruud && pg_restore --verbose --clean --no-acl --no-owner -h localhost -U ruud -d bookingexperts_development latest.dump'
